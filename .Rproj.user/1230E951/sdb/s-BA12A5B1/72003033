{
    "contents" : "#' A simpson object.\n#'\n#' Object of class \\code{simpson} are created by the \\code{integrateIt} function\n#' which is created by \\code{x} and \\code{y} and \\code{a} and \\code{b} and \\code{choose_calc}\n#' and the result is printed by \\code{print_trap}\n#'\n#' An object of the class `simpson' has the following slots:\n#' \\itemize{\n#' \\item \\code{x} The x-values of the function.\n#' \\item \\code{y} The y-values of the function\n#' \\item \\code{a} The starting point on the x-axis of integration.\n#' \\item \\code{b} The ending point on the x-axis of integration.\n#' \\item \\code{calc} The resulting Simpson sum by integration.\n#' }\n#'\n#' @author Joseph Ludmir: \\email{jludmir@@wustl.edu}\n#' @aliases simpson-class initialize,simpson-method\n#' @rdname simpson\n#' @export\nsetClass(Class = \"simpson\",\n         representation = representation(\n           x = \"numeric\",\n           y = \"numeric\",\n           a = \"numeric\",\n           b = \"numeric\",\n           calc = \"numeric\"\n         ),\n         prototype = prototype(\n           x = c(),\n           y = c(),\n           a = c(),\n           b = c(),\n           calc = c()\n         )\n)\n#' @export\nsetMethod(\"initialize\", \"simpson\",\n          function(.Object, ...){\n            value=callNextMethod()\n            return(value)\n          }\n)\n#' @export\nsetValidity(\"simpson\", function(object){\n  if(object@a >= object@b){\n    stop(\"The starting and ending points of integration must be different and the starting point must be smaller.\")\n  }\n})\n#' @export\nsetValidity(\"simpson\", function(object){\n  if(length(object@x) != length(object@y)){\n    stop(\"The number of x values must equal the number of y values.\")\n  }\n})\n#' @export\nsetValidity(\"simpson\", function(object){\n  if((length(object@x)%%2) != 0){\n    stop(\"The number of points being evaluated must be even.\")\n  }\n})\n#' @rdname trapezoid\n#' @export\nsetGeneric(\"getsimpson\",\n           function(object=\"simpson\")  {\n             standardGeneric(\"getsimpson\")\n           }\n)\n\n#' @export\nsetMethod(\"getsimpson\", \"simpson\",\n          function(object){\n            return(object@simpson)\n          }\n)\n",
    "created" : 1458789650759.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1394673938",
    "id" : "72003033",
    "lastKnownWriteTime" : 1458801161,
    "path" : "~/integrateIt/Midterm/R/simpson.R",
    "project_path" : "R/simpson.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}
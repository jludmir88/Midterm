{
    "contents" : "#' Calculate all squares\n#'\n#' Calculates both added and subtracted squares\n#'\n#' @param x A numeric object\n#' @param y A numeric object with the same dimensionality as \\code{x}.\n#'\n#' @return An object of class AllSquares containing\n#'  \\item{addSquares}{The sum of the squared values}\n#'  \\item{subtractSquares}{The difference of the squared values}\n#'  \\item{x}{The first object input} \n#'  \\item{y}{The second object input}\n#' @author Jacob M. Montgomery\n#' @note This produces an object of a new class\n#' @examples\n#' \n#' myX <- c(20, 3) \n#' myY <- c(-2, 4.1) \n#' allSquares(myX, myY)\n#' @seealso \\code{\\link{subtractSquares}}, \\code{\\link{addSquares}}\n#' @rdname allSquares\n#' @aliases allSquares,ANY-method\n#' @export\nsetGeneric(name=\"allSquares\",\n           def=function(x, y, ...)\n           {standardGeneric(\"allSquares\")}\n           )\n\n#' @export\nsetMethod(f=\"allSquares\",\n          definition=function(x, y, ...){\n            .add <- getSquares(addSquares(x, y))\n            .subtract <- getSquares(subtractSquares(x, y))\n            return(new(\"AllSquares\", addSquare=.add, subtractSquare=.subtract, x = x, y = y))\n          }\n          )\n\n\n",
    "created" : 1458791500505.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4093161986",
    "id" : "ABDFC691",
    "lastKnownWriteTime" : 1457466243,
    "path" : "~/squaresPack/R/allSquares.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}
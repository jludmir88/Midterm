document("R")
library(devtools)
library(roxygen2)
document("R")
library(integrateIt)
3 == 3
3 = 3
3 >=
3
4%2
4%/2
4%%2
4%/%2
5%%2
c(1,2,3,4,5,6)
x <- c(1,2,3,4,5,6)
a <- 2
b<- 4
y <- x^2
which(a <= x <= b)
which(a == x)
which(a <= x)
which((a <= x) && (x <= b)
)
which((x >= a) && (x <= b))
which(x >= a)
which(x <= b)
(which(x >= a) && which(x <= b))
x[0]
x[1]
4%%2
library(integrateIt)
trapezoid
integrateIt::initialize()
integrateIt(a)
document("R")
integrateIt(x,y,a,b,"s")
document("R")
integrateIt(x,y,a,b,"s")
h <- (b-a)/((length(x)-1))
int_trap <- (h/2)*(y_values[1] + y_values[y_size]
+ 2*(y_values[2]:y_values[y_size-1]))
x_values <- x[(a:b)]
y_values <- y[(a:b)]
y_size <- length(y_values)
int_trap <- (h/2)*(y_values[1] + y_values[y_size]
+ 2*(y_values[2]:y_values[y_size-1]))
integrateIt(x,y,a,b,"t")
integrateIt(x,y,a,b,"s")
b <- 1
integrateIt(x,y,a,b,"t")
y_size
y_values <- y[(a:b)]
y_size <- length(y_values)
y_size
document("R")
library(integrateIt)
integrateIt(x,y,a,b,"t")
b <- 4
integrateIt(x,y,a,b,"t")
integrateIt(x,y,a,b,"s")
y_size
x_values <- x[(a:b)]
y_values <- y[(a:b)]
y_size <- length(y_values)
integrateIt(x,y,a,b,"s")
[seq(3, (y_size-2), by = 2)]
y_values[seq(3, (y_size-2), by = 2)]
y_values <- 1:11
y_values <- 1:10
y_values[seq(3, (y_size-2), by = 2)]
document("R")
library(integrateIt)
integrateIt(x,y,a,b,"s")
integrateIt(x,y,a,b,"t")
(h/3)*(y_values[1] + y_values[y_size] +
sum(4*y_values[seq(2, y_size-1, by = 2)]) +
sum(2*y_values[seq(3, y_size-2, by = 2)]))
(h/3)*(y_values[1] + y_values[y_size] +
sum(4*y_values[seq(2, y_size-1, 2)]) +
sum(2*y_values[seq(3, y_size-2, 2)]))
y_values <- y[(a:b)]
y_size <- length(y_values)
y_size <- 10
y_values <- 1:10
(h/3)*(y_values[1] + y_values[y_size] +
sum(4*y_values[seq(2, y_size-1, 2)]) +
sum(2*y_values[seq(3, y_size-2, 2)]))
library(integrateIt)
document("R")
integrateIt(1:4, x^2, 1, 4, "s")
x <- 1:4
y <- x^2
integrateIt(1:4, x^2, 0, 4, "s")
function(x, y, a, b, choose_calc){
# For this h we use the number of x points minus one because were looking
# at the number of intervals.
h <- (b-a)/((length(x)-1))
x_values <- x[(a:b)]
y_values <- y[(a:b)]
y_size <- length(y_values)
if(choose_calc == "t"){
int_trap <- (h/2)*(y_values[1] + y_values[y_size]
+ 2*(y_values[2]:y_values[y_size-1]))
trap_calc <- new("trapezoid", x = x_values, y = y_values,
a = a, b = b, calc = int_trap)
return(trap_calc)
}
if(choose_calc == "s"){
if(y_size == 2){
int_simp <- (h/3)*(y_values[1] + y_values[2])
simp_calc <- new("simpson", x = x_values, y = y_values,
a = a, b = b, calc = int_simp)
}
if(y_size == 4){
int_simp <- (h/3)*(y_values[1] + 4*y_values[2] + 4*y_values[3] + y_values[4])
simp_calc <- new("simpson", x = x_values, y = y_values,
a = a, b = b, calc = int_simp)
} else {
int_simp <- (h/3)*(y_values[1] + y_values[y_size] +
sum(4*y_values[seq(2, y_size-1, 2)]) +
sum(2*y_values[seq(3, y_size-2, 2)]))
simp_calc <- new("simpson", x = x_values, y = y_values,
a = a, b = b, calc = int_simp)
}
return(simp_calc)
}
}
integrateIt(1:4, x^2, 0, 4, "s")
integrateIt(1:5, x^2, 0, 4, "s")
integrateIt(1:6, x^2, 0, 4, "s")
integrateIt(1:6, x^2, 1, 4, "s")
document("R")
library(integrateIt)
integrateIt(1:6, x^2, 1, 4, "s")
integrateIt(1:6, x^2, 0, 4, "s")
integrateIt(1:6, x^2, 1, 4, "s")
integrateIt(1:5, x^2, 0, 4, "s")
x <- 1:5
(length(x)%%2) != 0
integrateIt(1:5, x^2, 0, 4, "s")
integrateIt(1:1, x^2, 0, 4, "s")
integrateIt(1:2, x^2, 0, 4, "s")
integrateIt(1:2, x^3, 0, 4, "s")
library(integrateIt)
document("R")
integrateIt(1:2, x^2, 0, 4, "s")
x[which(x == a):which(x == b)]
x <- 1:2
y<- x^23
a <- 0
b <- 4
integrateIt(1:2, x^2, 0, 4, "s")
integrateIt(1:2, x^2, 0, 4, "t")
x_values <- x[which(x == a):which(x == b)]
x_values <- x[which(x == a):which(x == b)]
a <-1
x_values <- x[which(x == a):which(x == b)]
a<- -100
b <-100
x_values <- x[which(x == a):which(x == b)]
document("R")
library(integrateIt)
integrateIt(1:2, x^2, 0, 4, "s")
library(integrateIt)
document("R")
integrateIt(1:2, x^2, 0, 4, "s")
library(integrateIt)
library(integrateIt)
document("R")
integrateIt(1:2, x^2, 0, 4, "s")
integrateIt(1:2, x^2, 0, 4, "t")
integrateIt(1:2, x^2, 0, 4, "t")
library(integrateIt)
integrateIt(1:2, x^2, 0, 4, "t")
x_start
which(x == 0)
integrateIt(-1:-100, x^2, 0, 4, "t")
integrateIt(-1:100, x^2, 0, 4, "t")
rm(lit=ls())
rm(list=ls())
integrateIt(-1:100, x^2, 0, 4, "t")
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
h <- (b-a)/((length(x)-1))
x_start <- which(x == a)
x_end <- which(x == b)
x_size <- (length(x)-1)
int_trap <- (h/2)*(y[x_start] + y[x_end]
+ 2*(y[(x_start+1):(x_end-1)]))
integrateIt(-1:100, x^2, 0, 4, "t")
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
function(x, y, a, b, choose_calc){
# For this h we use the number of x points minus one because were looking
# at the number of intervals.
h <- (b-a)/((length(x)-1))
x_start <- which(x == a)
x_end <- which(x == b)
x_size <- (length(x)-1)
if(choose_calc == "t"){
int_trap <- (h/2)*(y[x_start] + y[x_end]
+ 2*(y[(x_start+1):(x_end-1)]))
trap_calc <- new("trapezoid", x = x, y = y,
a = a, b = b, calc = int_trap)
return(trap_calc)
}
}
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
b <- 0
b <- 4
a <- 0
x <- 1:100
y <- x^2
x_start <- which(x == a)
x_end <- which(x == b)
a <- 2
x_start <- which(x == a)
x_end <- which(x == b)
x_size <- (length(x)-1)
int_trap <- (h/2)*((y[x_start] + y[x_end]) + (2*(y[(x_start+1):(x_end-1)])))
h <- (b-a)/((length(x)-1))
int_trap <- (h/2)*((y[x_start] + y[x_end]) + (2*(y[(x_start+1):(x_end-1)])))
h <- (b-a)/((x_end - x_start + 1))
int_trap <- (h/2)*((y[x_start] + y[x_end]) + (2*(y[(x_start+1):(x_end-1)])))
h <- (b-a)/((x_end - x_start))
int_trap <- (h/2)*((y[x_start] + y[x_end]) + (2*(y[(x_start+1):(x_end-1)])))
if(length(x) == 2){
int_simp <- (h/3)*(y[x_start] + y[x_end])
simp_calc <- new("simpson", x = x, y = y,
a = a, b = b, calc = int_simp)
}
if(length(x) == 4){
int_simp <- (h/3)*(y[x_start] + 4*y[2] + 4*y[3] + y[x_end])
simp_calc <- new("simpson", x = x, y = y,
a = a, b = b, calc = int_simp)
} else {
int_simp <- (h/3)*(y[x_start] + 4*y[x_start-1] + y[x_end] +
sum(rep(c(4,2), times=(x_size-2)/2)*y[(x_start+1):(x_end-2)]))
simp_calc <- new("simpson", x = x, y = y,
a = a, b = b, calc = int_simp)
}
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
int_trap <- (h/2)*((y[x_start] + y[x_end]) + (2*(y[(x_start+1):(x_end-1)])))
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
calc = int_trap
trap_calc <- new("trapezoid", x = x, y = y,
a = a, b = b, calc = int_trap)
int_trap <- (h/2)*((y[x_start] + y[x_end]) + (2*(y[(x_start+1):(x_end-1)])))
x <- -1:100
y <- x^2
a <- 0
b <- 4
x_start <- which(x == a)
x_end <- which(x == b)
h <- (b-a)/((x_end - x_start))
int_trap <- (h/2)*((y[x_start] + y[x_end]) + (2*(y[(x_start+1):(x_end-1)])))
integrateIt(-1:100, (-1:100)^2, 0, 4, "s")
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "s")
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
integrateIt(-1:100, (-1:100)^2, 0, 16, "t")
integrateIt(-1:100, (-1:100)^2, 0, 1, "t")
integrateIt(-1:100, (-1:100)^2, 0, 2, "t")
integrateIt(-1:100, (-1:100)^2, 0, 2, "s")
integrateIt(-1:100, (-1:100)^2, 0, 4, "s")
int_simp <- (h/3)*(y[x_start] + 4*y[x_start-1] + y[x_end] +
sum(rep(c(4,2), times=(x_size-2)/2)*y[(x_start+1):(x_end-2)]))
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "s")
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "s")
x <- -1:100
y <- x^2
a <- 0
b <- 4
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "s")
h <- ((b-a)/((x_end - x_start)))
x_start <- which(x == a)
x_end <- which(x == b)
h <- ((b-a)/((x_end - x_start)))
int_simp <- h/3*(y[x_start] +
4*y[x_start-1] +
y[x_end] +
sum(rep(c(4,2), times=(x_size-2)/2)*y[(x_start+1):(x_end-2)]))
library(integrateIt)
integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
library(integrateIt)
q <- integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
print_trap
print_trap(q)
q <- integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
library(integrateIt)
print_trap(q)
print_trap(q)
print_trap(q)
library(integrateIt)
document("R")
print_trap(q)
document("R")
library(integrateIt)
document("R")
q <- integrateIt(-1:100, (-1:100)^2, 0, 4, "s")
print_simp(q)
q <- integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
library(integrateIt)
q <- integrateIt(-1:100, (-1:100)^2, 0, 4, "t")
document("R\")
))
)
sss
cwjeohj12309u4
.
))
/
\
\
\
3+3
3 ^^*(#)!
#' @export
""
"""""""""""""""""
document("R")
plot_trap(q)
library(integrateIt)
plot_trap(q)
library(integrateIt)
plot_trap(q)
library(integrateIt)
plot_trap(q)
library(integrateIt)
plot_trap(q)
library(integrateIt)
plot_trap(q)
plot_trap(q)
library(integrateIt)
library(integrateIt)
plot_trap(q)
library(integrateIt)
document("R")
q <- integrateIt(1:10, x^2, 0, 8, "s" )
q <- integrateIt(1:10, (1:10)^2, 0, 8, "s" )
q <- integrateIt(1:100, (1:100)^2, 0, 8, "s" )
q <- integrateIt(1:100, (1:100)^2, 0, 10, "s" )
q <- integrateIt(1:100, (1:100)^2, 0, 100, "s" )
q <- integrateIt(1:100, (1:100)^2, 0, 100, "t" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 100, "s" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, "s" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
document("R")
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
x <- 1:100
y <- (1:100)^2
n = length(x) -1
h <- (4/99)
y[1]
/2
y[2:(n)]
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
sum(y[2:(n)])
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 4, 4, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, 1, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, 100, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, 33, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, 4, "t" )
library(integrateIt)
document("R")
q <- integrateIt(1:100, (1:100)^2, 0, 4, 4, "t" )
q <- integrateIt(1:100, (1:100)^2, 1, 4, 4, "t" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 4, 4, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4, "t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4,\"t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4,"t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4,"t" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 4,"t" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 0, 4,"t" )
q <- integrateIt(1:100, (1:100)^2, 1, 4,"t" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 1, 4,"t" )
q <- integrateIt(1:100, (1:100)^2, 0, 4,"t" )
q <- integrateIt(1:100, (1:100)^2, 1, 100,"t" )
q <- integrateIt(1:100, (1:100)^2, 1, 5,"t" )
q <- integrateIt(1:100, (1:100)^2, 1, 6,"t" )
q <- integrateIt(1:100, (1:100)^2, 1, 100,"t" )
plot_trap(q)
q <- integrateIt(1:100, (1:100)^2, 1, 100,"s" )
q <- integrateIt(1:100, (1:100)^2, 1, 99,"s" )
seq(1, 100, 2)
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 1, 99,"s" )
q <- integrateIt(1:100, (1:100)^2, 1, 100,"s" )
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 1, 99,"s" )
q <- integrateIt(1:100, (1:100)^2, 1, 4,"s" )
plot_simp(q)
plot_simp(q)
library(integrateIt)
q <- integrateIt(1:100, (1:100)^2, 1, 100,"s" )
plot_simp(q)
q <- integrateIt(1:100, (1:100)^2, 1, 100,"t" )
plot_simp(t)
plot_trap(q)
q <- integrateIt(1:100, (1:100)^2, 1, 100,"s" )
plot_simp(q)
ylim = c(0,10)
plot_simp(q)
library(integrateIt)
document("R")
print_simp(q)
print_trap(q)
q <- integrateIt(1:100, (1:100)^2, 1, 100,"t" )
print_trap(q)
